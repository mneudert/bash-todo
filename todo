#!/usr/bin/env bash

## Set up global variables
TODO_DATE="${TODO_DATE:-%F %T}"
TODO_ROOT="${TODO_ROOT:-$HOME/.todo}"

basedir="${TODO_ROOT}$(pwd)"


#######################################
# Checks if the configures basedir exists.
#
# Returns:
#   Boolean
#######################################
basedir_exists() {
  return $([[ -d "${basedir}" ]])
}

#######################################
# Returns the todos for the current working directory.
#
# Returns:
#     Array
#######################################
find_todos() {
    local maxdepth=""

    [ ! -z "${1}" ] && maxdepth="-maxdepth ${1}"

    find "${basedir}" ${maxdepth} -type f -print0 | sort -z -n
}


#######################################
# Application
#######################################
case "${1}${2}" in
  '') ;&
  help)
    echo 'Usage: todo <command>'
    echo ''
    echo 'All commands are using the current working directory.'
    echo ''
    echo 'Commands:'
    echo '   clear               Clears all todos'
    echo '   clear --recursive   Clears all todos recursively'
    echo '   count               Returns count of todos'
    echo '   list                Prints all todos'
    echo '   list --raw          Lists all todos in raw format (filename only)'
    echo '   list --recursive    Prints all todos recursively'
    echo '   modify [0-9]*       Modifies a todo with a replacement message'
    echo '   rm [0-9]*           Deletes a single todo (with index displayed in list)'
    echo ''
    echo 'To recursively list only filenames you can use "list --recursive --raw"'
    ;;

  clear)
    basedir_exists || { exit 0; }
    find_todos 1 | xargs -0 rm
    ;;

  clear--recursive)
    basedir_exists || { exit 0; }
    find_todos | xargs -0 rm
    ;;

  count)
    basedir_exists || { echo 0; exit 0; }
    find_todos 1 | tr "\0" "\n" | wc -l
    ;;

  list)
    basedir_exists || { exit 0; }

    while IFS= read -r -d '' todo; do
       todos[todo_num++]="${todo}"
    done < <( find_todos 1 )

    pad_len="${#todo_num}"
    pad_str="            "

    for i in "${!todos[@]}"; do
        n=$((1 + $i))

        echo -n "${pad_str:0:$(($pad_len - ${#n}))}${n} | "
        echo -n "$(date -d @$( basename "${todos[$i]}" ) +"${TODO_DATE}"): "
        cat "${todos[$i]}"
    done
    ;;

  list--raw)
    basedir_exists || { exit 0; }
    find_todos 1 | tr "\0" "\n"
    ;;

  list--recursive)
    basedir_exists || { exit 0; }

    case "${3}" in
      "--raw")
        find_todos | tr "\0" "\n"
        ;;

      "")
        cur_dir=""

        while IFS= read -r -d '' todo; do
           todos[todo_num++]="${todo}"
        done < <( find_todos )

        for todo in "${todos[@]}"; do
            todo_dir=$( dirname "${todo#$TODO_ROOT}" )

            if [[ ${todo_dir} != ${cur_dir} ]]; then
                [ ! -z "${cur_dir}" ] && echo ""

                echo "${todo_dir}:"
                cur_dir=${todo_dir}
            fi

            echo -n "  $(date -d @$( basename "${todo}" ) +"${TODO_DATE}"): "
            cat "${todo}"
        done
        ;;
    esac
    ;;

  modify[0-9]*)
    basedir_exists || { exit 0; }

    while IFS= read -r -d '' todo; do
       todos[todo_num++]="${todo}"
    done < <( find_todos 1 )

    todo=${todos[$(($2 - 1))]}

    if [ -f "${todo}" ]; then
      shift 2
      echo "$@" > "${todo}"
    fi
    ;;

  rm[0-9]*)
    basedir_exists || { exit 0; }

    while IFS= read -r -d '' todo; do
       todos[todo_num++]="${todo}"
    done < <( find_todos 1 )

    todo=${todos[$(($2 - 1))]}

    [ -f "${todo}" ] && rm "${todo}"
    ;;

  *)
    mkdir -p "${basedir}"
    echo "$@" > "${basedir}/`date +%s`"
    ;;
esac
